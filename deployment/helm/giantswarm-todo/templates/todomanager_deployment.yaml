---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: todomanager
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "giantswarm-todo.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.todomanagerReplicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "giantswarm-todo.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "giantswarm-todo.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: todomanager
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 50
              podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchExpressions:
                    - key: "app.kubernetes.io/name"
                      operator: In
                      values:
                        - {{ include "giantswarm-todo.name" . }}
                    - key: "app.kubernetes.io/instance"
                      operator: In
                      values:
                        - {{ .Release.Name }}
            - weight: 100
              podAffinityTerm:
                topologyKey: "failure-domain.beta.kubernetes.io/zone"
                labelSelector:
                  matchExpressions:
                    - key: "app.kubernetes.io/name"
                      operator: In
                      values:
                        - {{ include "giantswarm-todo.name" . }}
                    - key: "app.kubernetes.io/instance"
                      operator: In
                      values:
                        - {{ .Release.Name }}
      containers:
        - name: todomanager
          image: "{{ .Values.todomanagerImage.registry }}{{ .Values.todomanagerImage.name }}:{{ .Values.todomanagerImage.tag }}"
          imagePullPolicy: "{{ .Values.todomanagerImage.pullPolicy }}"
          ports:
            - name: grpc
              containerPort: 8090
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - grpc_health_probe
                - -addr=localhost:8090
            initialDelaySeconds: 2
            periodSeconds: 5
          env:
            - name: "MYSQL_HOST"
              value: "todo-mysql.{{ .Release.Namespace }}.svc.cluster.local"
            - name: "MYSQL_USER"
              value: "root"
            - name: "MYSQL_PASS"
              valueFrom:
                secretKeyRef:
                  name: todo-mysql
                  key: mysql-root-password
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
            
